{"version":3,"sources":["api.js","images/search_icon.svg","components/header/Header.js","images/blackAndWhite.jpg","components/moviesContainer/MoviesContainer.js","App.js","reportWebVitals.js","index.js","components/moviesContainer/movieContainer.module.css","components/header/header.module.css"],"names":["ApiContext","createContext","ApiContextProvider","props","apiLink","apiKey","useState","data","setData","loading","setLoading","movieData","setMovieData","search","setSearch","searchString","searchString2","getData","a","fetch","res","json","Search","res2","undefined","data2","concat","useEffect","then","getMovieData","movieId","fetchMovie","response","style","position","top","left","transform","Provider","value","changeSearch","children","Header","useContext","handleSubmit","e","preventDefault","className","styles","container","wrapper","onSubmit","src","searchIcon","onClick","alt","type","onChange","target","placeholder","MoviesContainer","closed","setClosed","close","useCallback","movieDetailsWrapper","document","getElementById","closeBtn","addEventListener","window","innerWidth","removeAttribute","tl","TimelineLite","movies","querySelectorAll","from","y","opacity","stagger","each","ease","Power0","easeNone","bg","TweenMax","to","scale","transformOrigin","repeat","yoyo","Power2","easeInOut","Fragment","backgroundImgHolder","id","noData","blackOverlay","backgroundImg","bgImg","map","movieWrapper","imdbID","display","movieContainer","Poster","detailsContainer","poster","Title","data-id","imgNotAvailable","title","year","Year","movieDetailsContainer","movieDetails","Ratings","Value","fonts","Released","Plot","flex","marginLeft","Director","Writer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.73e1cd18.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ApiContext = createContext();\r\n\r\nconst ApiContextProvider = (props) => {\r\n\r\n    const apiLink = 'https://www.omdbapi.com/';\r\n    const apiKey = 1200995;\r\n\r\n    //state for storing movies list\r\n    const [data, setData] = useState();\r\n\r\n    //waiting for data\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //storing clicked movie data\r\n    const [movieData, setMovieData] = useState();\r\n\r\n    //state for searching the movie\r\n    const [search, setSearch] = useState('Avengers');\r\n\r\n    //set search to 'avengers' if search is null\r\n    if (search === '') {\r\n        setSearch('Avengers');\r\n    }\r\n\r\n    //create api url from search\r\n    let searchString = `${apiLink}?apikey=${apiKey}&s=${search}&page=1`;\r\n    let searchString2 = `${apiLink}?apikey=${apiKey}&s=${search}&page=2`;\r\n\r\n    //get the movies\r\n    const getData = async (searchString) => {\r\n        const res = await fetch(searchString);\r\n\r\n        const data = (await res.json()).Search;\r\n\r\n        const res2 = await fetch(searchString2);\r\n\r\n        const data2 = (await res2.json()).Search;\r\n\r\n        if (data2 !== undefined) {\r\n            return data.concat(data2);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    //fetch api data and store it in data useState\r\n    useEffect(() => {\r\n\r\n        getData(searchString)\r\n            .then(data => {\r\n                setData(data);\r\n                setLoading(false);\r\n            })\r\n\r\n    }, [searchString]);\r\n\r\n    //change value of search\r\n    const changeSearch = (search) => {\r\n        setSearch(search);\r\n    }\r\n    const getMovieData = async (movieId) => {\r\n\r\n        const fetchMovie = `${apiLink}?apikey=${apiKey}&i=${movieId}`;\r\n        await fetch(fetchMovie)\r\n            .then(response => response.json())\r\n            .then(data => setMovieData(data))\r\n    }\r\n\r\n    if (!loading) {\r\n        return (\r\n            <ApiContext.Provider value={{ loading, search, data, movieData, changeSearch, getMovieData, setMovieData }}>\r\n                {props.children}\r\n            </ApiContext.Provider>\r\n        )\r\n    }\r\n\r\n    //Loading section\r\n    else {\r\n        return (\r\n            <h1 style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n                Loading...\r\n            </h1>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ApiContextProvider;","export default __webpack_public_path__ + \"static/media/search_icon.eb5872d9.svg\";","import searchIcon from '../../images/search_icon.svg'\r\nimport React, { useContext, useState } from 'react';\r\nimport { ApiContext } from '../../api'\r\nimport styles from './header.module.css';\r\n\r\nconst Header = () => {\r\n\r\n    //getting data\r\n    const { changeSearch } = useContext(ApiContext);\r\n\r\n    //state to store searched movie\r\n    const [search, setSearch] = useState('');\r\n\r\n    //function to change the search value to get new searched movie data\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        changeSearch(search);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <h1>Movies</h1>\r\n                <form className={styles.search} onSubmit={handleSubmit}>\r\n                    <img src={searchIcon} onClick={handleSubmit} alt='searchIcon' />\r\n                    <input type='text' value={search} onChange={(e) => setSearch(e.target.value)} placeholder='Search...' />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/blackAndWhite.1edb129a.jpg\";","import backgroundImg from '../../images/blackAndWhite.jpg';\r\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { ApiContext } from '../../api';\r\nimport styles from './movieContainer.module.css';\r\n\r\n//for animation\r\nimport { TweenMax, TimelineLite, Power0, Power2 } from 'gsap';\r\n\r\nconst MoviesContainer = () => {\r\n    //getting data\r\n    const { data, loading, movieData, getMovieData, setMovieData } = useContext(ApiContext);\r\n\r\n    //state to close movie details card\r\n    let [closed, setClosed] = useState(true);\r\n\r\n    //get data of clicked movie\r\n    const movieClicked = (movieId) => {\r\n        if (window.innerWidth < 768) {\r\n            document.getElementById('container').style.display = 'none';\r\n        }\r\n        getMovieData(movieId);\r\n    }\r\n\r\n    //function to manipulate 'closed' state\r\n    const close = useCallback(() => {\r\n        let movieDetailsWrapper = document.getElementById('movieDetailsWrapper');\r\n        let closeBtn = document.getElementById('closeBtn');\r\n\r\n        if (movieDetailsWrapper !== null || closeBtn !== null) {\r\n            closeBtn.addEventListener('click', () => {\r\n                if (window.innerWidth < 768) {\r\n                    document.getElementById('container').removeAttribute('style');\r\n                }\r\n                setClosed(true);\r\n                setMovieData(undefined);\r\n            })\r\n        }\r\n\r\n    }, [setMovieData]);\r\n\r\n    //animation after 'data' changes\r\n    useEffect(() => {\r\n        const tl = new TimelineLite();\r\n        let movies = document.querySelectorAll('#movie');\r\n\r\n        if (movies !== undefined || movies !== null) {\r\n            tl.from(movies, 1.5, { y: -50, opacity: 0, stagger: { each: 0.1, ease: Power0.easeNone } }, \"+=0.2\");\r\n        }\r\n    }, [data])\r\n\r\n    //animation and fix close movie card bug\r\n    useEffect(() => {\r\n        let bg = document.getElementById('bg');\r\n\r\n        //animation of background image\r\n        if (bg !== undefined || bg !== null) {\r\n            TweenMax.to(bg, 15, { scale: 1.5, transformOrigin: \"50% 50%\", repeat: -1, yoyo: true, ease: Power2.easeInOut });\r\n        }\r\n\r\n        //change state of closed\r\n        movieData !== undefined ? (setClosed(false)) : (setClosed(true));\r\n\r\n        //Conditional operator aka Ternary operator didn't work so I should use if statement\r\n        if (!closed) {\r\n            close();\r\n        }\r\n\r\n    }, [movieData, close, closed])\r\n\r\n    //runs when data is fetched and loading is not true\r\n    if (data !== undefined && !loading) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={styles.backgroundImgHolder} id='bg'>\r\n                    <div className={styles.blackOverlay}></div>\r\n                    <img src={backgroundImg} className={styles.bgImg} alt='backgroundImg' />\r\n                </div>\r\n                <div className={styles.container} id='container'>\r\n                    {/* mapping the data array to display movies */}\r\n                    {\r\n                        data.map((data) => {\r\n                            return (\r\n                                <div className={styles.movieWrapper} id='movie' onClick={() => movieClicked(data.imdbID)} key={data.imdbID} >\r\n                                    <div className={styles.movieContainer}>\r\n\r\n                                        {/* using conditional operator to see if image aka poster is available or not */}\r\n                                        {data.Poster !== 'N/A' ? (\r\n                                            <div className={styles.detailsContainer}>\r\n                                                <img src={data.Poster} className={styles.poster} alt={data.Title} data-id={data.imdbID} />\r\n                                            </div>\r\n                                        ) : (\r\n                                                <div className={styles.detailsContainer}>\r\n                                                    <h3 className={styles.imgNotAvailable}>Image not Available!<br /> :(</h3>\r\n                                                    <img className={styles.poster} alt='' data-id={data.imdbID} />\r\n                                                </div>\r\n                                            )}\r\n\r\n                                        <p className={styles.title}>{data.Title}</p>\r\n                                        <p className={styles.year}>{data.Year}</p>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div >\r\n\r\n                {/* movie details displayed when a movie is clicked */}\r\n                {\r\n                    (movieData !== undefined && !closed) ? (\r\n                        <div className={styles.movieDetailsWrapper} id='movieDetailsWrapper'>\r\n                            <div className={styles.movieDetailsContainer}>\r\n                                <div className={styles.movieDetails}>\r\n                                    <img src={movieData.Poster} alt={movieData.Title} />\r\n                                    <div>\r\n                                        <h1>{movieData.Title} ({movieData.Year})</h1>\r\n                                        <h3>Ratings: {movieData.Ratings[0].Value}</h3>\r\n                                        <p className={styles.fonts}>Released Data: {movieData.Released}</p>\r\n                                        <p>{movieData.Plot}</p>\r\n                                        <div className={styles.flex}>\r\n                                            <p className={styles.fonts}>Director/s:</p>\r\n                                            <p className={styles.marginLeft}>{movieData.Director}</p>\r\n                                        </div>\r\n                                        <p className={styles.fonts}>Writer/s:</p>\r\n                                        <p>{movieData.Writer}</p>\r\n                                        <input type='button' id='closeBtn' onClick={close} value='Close' />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : ('')\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    // displayed when there is no movies when searched\r\n    else {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={styles.backgroundImgHolder} id='bg'></div>\r\n                <div className={styles.noData}>\r\n                    <h1>No Movies Found! :(</h1>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MoviesContainer;","import './App.css';\nimport React from 'react';\nimport AppContextProvider from './api';\nimport Header from './components/header/Header';\nimport MoviesContainer from './components/moviesContainer/MoviesContainer';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <AppContextProvider>\n        <Header />\n        <MoviesContainer />\n      </AppContextProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundImgHolder\":\"movieContainer_backgroundImgHolder__2zHWW\",\"blackOverlay\":\"movieContainer_blackOverlay__2YwqV\",\"bgImg\":\"movieContainer_bgImg__kCGjE\",\"container\":\"movieContainer_container__LEh4u\",\"movieWrapper\":\"movieContainer_movieWrapper__3vCXR\",\"imgNotAvailable\":\"movieContainer_imgNotAvailable__2ZKVW\",\"movieContainer\":\"movieContainer_movieContainer__1XvnH\",\"detailsContainer\":\"movieContainer_detailsContainer__3o6B8\",\"title\":\"movieContainer_title___dRHo\",\"year\":\"movieContainer_year__28hPo\",\"details\":\"movieContainer_details__37gxW\",\"poster\":\"movieContainer_poster__GOsOP\",\"movieDetailsWrapper\":\"movieContainer_movieDetailsWrapper__v6Dh7\",\"movieDetailsContainer\":\"movieContainer_movieDetailsContainer__9prQv\",\"movieDetails\":\"movieContainer_movieDetails__1vQ90\",\"flex\":\"movieContainer_flex__3Tzcy\",\"fonts\":\"movieContainer_fonts__2KTyY\",\"marginLeft\":\"movieContainer_marginLeft__2Y4l1\",\"noData\":\"movieContainer_noData__1q5bB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__30W38\",\"wrapper\":\"header_wrapper__2ju3I\"};"],"sourceRoot":""}